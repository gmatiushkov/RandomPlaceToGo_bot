from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from keyboards import direction_menu, main_menu
import random


class RandomDirection(StatesGroup):
    generating_direction = State()  # –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤


async def random_direction(callback_query: types.CallbackQuery, state: FSMContext):
    await callback_query.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è:", reply_markup=direction_menu)


async def generate_left_right(callback_query: types.CallbackQuery, state: FSMContext):
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    await RandomDirection.generating_direction.set()

    direction = random.choice(["–ù–∞–ª–µ–≤–æ ‚¨ÖÔ∏è", "–ù–∞–ø—Ä–∞–≤–æ ‚û°Ô∏è"])
    await callback_query.message.answer(f"{direction}")
    await callback_query.message.delete()  # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é
    await callback_query.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è:", reply_markup=direction_menu)

    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    await state.finish()


async def generate_all_directions(callback_query: types.CallbackQuery, state: FSMContext):
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    await RandomDirection.generating_direction.set()

    direction = random.choice(["–ü—Ä—è–º–æ ‚¨ÜÔ∏è", "–ù–∞–∑–∞–¥ ‚¨áÔ∏è", "–ù–∞–ø—Ä–∞–≤–æ ‚û°Ô∏è", "–ù–∞–ª–µ–≤–æ ‚¨ÖÔ∏è"])
    await callback_query.message.answer(f"{direction}")
    await callback_query.message.delete()  # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é
    await callback_query.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è:", reply_markup=direction_menu)

    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    await state.finish()


async def back_to_menu(callback_query: types.CallbackQuery, state: FSMContext):
    await callback_query.message.edit_text("–ß—Ç–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å? üåÄ", reply_markup=main_menu)
    await state.finish()


def register_handlers_random_direction(dp: Dispatcher):
    dp.register_callback_query_handler(random_direction, lambda c: c.data == 'direction')
    dp.register_callback_query_handler(generate_left_right, lambda c: c.data == 'left_right', state="*")
    dp.register_callback_query_handler(generate_all_directions, lambda c: c.data == 'all_directions', state="*")
    dp.register_callback_query_handler(back_to_menu, lambda c: c.data == 'back_to_menu', state="*")
